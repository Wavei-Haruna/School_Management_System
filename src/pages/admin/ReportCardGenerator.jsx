// src/components/ReportCardGenerator.jsx
import React from 'react';
import { Page, Text, View, Document, StyleSheet, PDFDownloadLink } from '@react-pdf/renderer';

// Define styles for the report card
const styles = StyleSheet.create({
  page: {
    padding: 30,
    backgroundColor: '#f5f5f5',
  },
  section: {
    marginBottom: 20,
    padding: 15,
    border: '1px solid #ddd',
    borderRadius: 5,
    backgroundColor: '#fff',
  },
  title: {
    fontSize: 28,
    marginBottom: 20,
    textAlign: 'center',
    fontWeight: 'bold',
    color: '#333',
  },
  row: {
    flexDirection: 'row',
    marginBottom: 10,
  },
  column: {
    width: '50%',
    padding: 5,
    borderRight: '1px solid #ddd',
  },
  columnLast: {
    width: '50%',
    padding: 5,
  },
  bold: {
    fontWeight: 'bold',
    color: '#555',
  },
  text: {
    fontSize: 12,
    color: '#333',
  },
  heading: {
    fontSize: 16,
    fontWeight: 'bold',
    marginBottom: 10,
    color: '#333',
  },
  marks: {
    marginTop: 10,
  },
  marksList: {
    fontSize: 12,
    color: '#333',
    lineHeight: 1.5,
  },
  footer: {
    marginTop: 20,
    textAlign: 'center',
    fontSize: 10,
    color: '#777',
  }
});

const ReportCard = ({ students, studClass }) => (
  <Document>
    <Page size="A4" style={styles.page}>
      <Text style={styles.title}>Student Report Cards</Text>
      {students?.map(student => (
        <View key={student.id} style={styles.section}>
          <Text style={styles.heading}>Student Information</Text>
          <View style={styles.row}>
            <View style={styles.column}>
              <Text style={styles.bold}>Name:</Text>
              <Text style={styles.text}>{student.name || 'N/A'}</Text>
            </View>
            <View style={styles.columnLast}>
              <Text style={styles.bold}>Index Number:</Text>
              <Text style={styles.text}>{student.indexNumber || 'N/A'}</Text>
            </View>
            <View style={styles.columnLast}>
              <Text style={styles.bold}>Year:</Text>
              <Text style={styles.text}>{student.year || 'N/A'}</Text>
            </View>
            
          </View>
          <View style={styles.row}>
            <View style={styles.column}>
              <Text style={styles.bold}>Class:</Text>
              <Text style={styles.text}>{studClass || 'N/A'}</Text>
            </View>
            <View style={styles.columnLast}>
              <Text style={styles.bold}>Grade:</Text>
              <Text style={styles.text}>{student.grade || 'N/A'}</Text>
              
            </View>
            <View style={styles.columnLast}>
              <Text style={styles.bold}>Semester:</Text>
              <Text style={styles.text}>{student.semester || 'N/A'}</Text>
            </View>
          </View>
          <View style={styles.marks}>
            <Text style={styles.bold}>Marks:</Text>
            <View style={styles.marksList}>
              {student.marks ? (
                Object.entries(student.marks).map(([subject, details]) => (
                  <View key={subject} style={{ marginBottom: 10 }}>
                    <Text style={styles.bold}>{subject}:</Text>
                    {Object.entries(details).map(([type, mark]) => (
                      <Text key={type}>
                        {type.charAt(0).toUpperCase() + type.slice(1)}: {mark || 'N/A'}
                      </Text>
                    ))}
                  </View>
                ))
              ) : (
                <Text>No marks available</Text>
              )}
            </View>
          </View>
        </View>
      ))}
      <Text style={styles.footer}>Generated by AAMUSTED Online Grading System</Text>
    </Page>
  </Document>
);

const ReportCardGenerator = ({ students, studClass }) => (
  <PDFDownloadLink document={<ReportCard students={students} studClass={studClass} />} fileName="report-cards.pdf">
    {({ loading }) => (loading ? 'Generating document...' : 'Download Report Cards')}
  </PDFDownloadLink>
);

export default ReportCardGenerator;
